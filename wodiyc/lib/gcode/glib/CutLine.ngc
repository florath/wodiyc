(--- Cut Line ---)
( OLabel Uses: o10000 - o10003 )
( Cuts a line from [start_x, start_y] to [end_x, end_y]. )
( The depth starts at [depth_start] and goes to [depth]. )
( Each cut is milles [milling_times] times. )
( Feed rates for work and movement must be given. )
( [tool_depth] is the depth the tool is able to cut )
( in one step. )
o<gclib_cut_line> sub
( Assign parameters to names )
#<start_x> = #1
#<start_y> = #2
#<end_x> = #3
#<end_y> = #4
#<depth> = #5
#<depth_start> = #6
#<milling_times> = #7
#<feed_rate_move> = #8
#<feed_rate_work> = #9
#<tool_depth> = #10
( Compute the tool_runs and tool_depth_per_run )
o<gclib_compute_tool_runs> call [#<depth> - #<depth_start>] [#<tool_depth>]
( The loop handles [from_x, from_y] -> [to_x, to_y] )
#<from_x> = #<start_x>
#<from_y> = #<start_y>
#<to_x> = #<end_x>
#<to_y> = #<end_y>
( Move to the beginning of the cut line )
F#<feed_rate_move>
G0 X#<from_x> Y#<from_y>
( Start with the work )
F#<feed_rate_work>
#<z_idx> = 1
#<mt_cur> = 0

o10000 while [#<z_idx> LE #<_gclib_tool_runs>]

  ( [from_x, from_y] -> [to_x, to_y] )
  #<z> = [-#<depth_start> + #<z_idx> * [- #<_gclib_tool_depth_per_run>]]
  G1 Z#<z>
  G1 X#<to_x> Y#<to_y>
  #<mt_cur> = [#<mt_cur> + 1]
  o10002 if [#<mt_cur> GE #<milling_times>]
    #<mt_cur> = 0
    #<z_idx> = [#<z_idx> + 1]
    o10001 if [#<z_idx> GT #<_gclib_tool_runs>]
      o10000 break
    o10001 endif
  o10002 endif

  ( Swap <to_> and <from_> )
  #<tmp_x> = #<to_x>
  #<tmp_y> = #<to_y>
  #<to_x> = #<from_x>
  #<to_y> = #<from_y>
  #<from_x> = #<tmp_x>
  #<from_y> = #<tmp_y>

o10000 endwhile

o<gclib_cut_line> endsub
